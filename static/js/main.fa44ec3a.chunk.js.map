{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","isValidImgUrl","isValidImdbUrl","validUrl","str","RegExp","test","handleSubmit","event","preventDefault","props","onAdd","setState","blurHandlerImgUrl","blurHandlerImdbUrl","onSubmit","this","htmlFor","type","id","placeholder","required","value","onChange","target","onBlur","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa44ec3a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  isValidImgUrl: boolean;\n  isValidImdbUrl: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isValidImgUrl: true,\n    isValidImdbUrl: true,\n  };\n\n  validUrl = (str: string) => {\n    const regex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    return regex.test(str);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title\n      || !description\n      || !this.validUrl(imgUrl)\n      || !this.validUrl(imdbUrl)\n      || !imdbId) {\n      return;\n    }\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(movie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  blurHandlerImgUrl = () => {\n    if (this.validUrl(this.state.imgUrl)) {\n      this.setState({ isValidImgUrl: true });\n    } else {\n      this.setState({ isValidImgUrl: false });\n    }\n  };\n\n  blurHandlerImdbUrl = () => {\n    if (this.validUrl(this.state.imdbUrl)) {\n      this.setState({ isValidImdbUrl: true });\n    } else {\n      this.setState({ isValidImdbUrl: false });\n    }\n  };\n\n  render() {\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"form__input\" htmlFor=\"title\">\n          Title:\n          <input\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"Title\"\n            required\n            value={this.state.title}\n            onChange={(event) => this.setState({\n              title: event.target.value,\n            })}\n          />\n        </label>\n        <label className=\"form__input\" htmlFor=\"imgUrl\">\n          Img URL:\n          <input\n            id=\"imgUrl\"\n            type=\"text\"\n            placeholder=\"imgUrl\"\n            required\n            value={this.state.imgUrl}\n            onChange={(event) => this.setState({\n              imgUrl: event.target.value,\n            })}\n            onBlur={this.blurHandlerImgUrl}\n          />\n          {!this.state.isValidImgUrl && <span className=\"error\">Enter valid URL!</span>}\n        </label>\n        <label className=\"form__input\" htmlFor=\"imdbUrl\">\n          Imdb URL:\n          <input\n            id=\"imdbUrl\"\n            type=\"text\"\n            placeholder=\"imdbUrl\"\n            required\n            value={this.state.imdbUrl}\n            onChange={(event) => this.setState({\n              imdbUrl: event.target.value,\n            })}\n            onBlur={this.blurHandlerImdbUrl}\n          />\n          {!this.state.isValidImdbUrl && <span className=\"error\">Enter valid URL!</span>}\n        </label>\n        <label className=\"form__input\" htmlFor=\"imdbId\">\n          Imdb ID:\n          <input\n            id=\"imdbId\"\n            type=\"text\"\n            placeholder=\"imdbId\"\n            required\n            value={this.state.imdbId}\n            onChange={(event) => this.setState({\n              imdbId: event.target.value,\n            })}\n          />\n        </label>\n        <label className=\"form__input\" htmlFor=\"Description\">\n          Description:\n          <input\n            id=\"Description\"\n            placeholder=\"Description\"\n            required\n            value={this.state.description}\n            onChange={(event) => this.setState({\n              description: event.target.value,\n            })}\n          />\n        </label>\n        <button\n          type=\"submit\"\n          disabled={!this.state.title\n            || !this.state.description\n            || !this.state.imdbId\n            || !this.state.imdbUrl\n            || !this.state.imgUrl}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}